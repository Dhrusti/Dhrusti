@inject IHttpContextAccessor HttpContextAccessor
@model BookManagement.Models.SubCategoryViewModel
@{
    ViewData["Title"] = "UpdateSubCategory";
    Layout = "~/Views/Shared/_Layout.cshtml";
    bool IsLoggedIn = false;
	var user = HttpContextAccessor.HttpContext.Session.GetObject<UserMstModel>("User");

	if (user != null)
	{
		IsLoggedIn = true;
	}
	if (IsLoggedIn)
	{

	}
	else
	{
		Context.Response.Redirect("/Authentication/LogOut");
	}

}
<style>
	.cnlbtn {
		width: auto;
		padding: 10px 18px;
		background-color: #bf0d0d;
		border-radius: 1px;
	}

	.savebtn {
		width: auto;
		padding: 10px 18px;
		background-color: #008CBA;
		border-radius: 1px;
	}
    	.btn {
		color : #000000;
	}
</style>
<h1>UpdateUser</h1>
<div class="row">
    <div class="col-md-4">
        <form method="post" asp-action="UpdateSubCategory" asp-controller="SubCategory">
            <div asp-validation-summary=ModelOnly class="alert-danger"></div>
            <input hidden asp-for="SubCategoryId" />
            <div>
                @Html.Label("CategoryName")
                <div>
                    @Html.DropDownListFor(x => x.CategoryId, new SelectList(ViewBag.SubCategoryList, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                    <span asp-validation-for="CategoryId" class="alert-danger"></span>
                </div>
            </div>
            <div class="form-group">

                <label asp-for="SubCategoryName" class="control-label"></label>
                <input asp-for="SubCategoryName" class="form-control" />
                <span asp-validation-for="SubCategoryName" class="alert-danger"></span>
            </div>
            <div>
                <input type="submit" value="Update" class="btn savebtn" />
                <a asp-action="SubCategoryIndex" class="btn cnlbtn">Cancel</a>
                <h4 style="color:red">@ViewBag.Message</h4>
            </div>
        </form>
    </div>
</div>





