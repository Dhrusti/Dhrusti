@inject IHttpContextAccessor HttpContextAccessor
@model IEnumerable<SubCategoryModel>


@{

    ViewData["Title"] = "SubCategory";
    Layout = "~/Views/Shared/_Layout.cshtml";

	
    int IsAccess = 0;
    bool IsLoggedIn = false;
    var user = HttpContextAccessor.HttpContext.Session.GetObject<UserMstModel>("User");
    var UserId = HttpContextAccessor.HttpContext.Session.GetString("UserId");
    if (!string.IsNullOrWhiteSpace(UserId))
    {



        if (HttpContextAccessor.HttpContext.Session.GetString("AccessId") == "1")
        {
            IsAccess = 1;
        }
    }


    if (user != null)
    {
        IsLoggedIn = true;
    }
    if (IsLoggedIn)
    {

	
    }
    else
    {
        Context.Response.Redirect("/Authentication/LogOut");
    }


    int AddHasAccessPermission = 0;
    int DeleteHasAccessPermission = 0;
    int EditHasAccessPermission = 0;
    int ViewHasAccessPermission = 0;


    //var user = HttpContextAccessor.HttpContext.Session.GetObject<UserMstModel>("User");
    var userRoleList = HttpContextAccessor.HttpContext.Session.GetObject<List<UserPermissionModel>>("UserRoleList");
    //var userRoleList = HttpContext.Session.GetObject<List<UserPermissionModel>>("UserRoleList");
    if (user != null)
    {
        if (userRoleList != null)
        {
            userRoleList = userRoleList.Where(x => x.UserId == user.UserId).ToList();
            if (userRoleList.Count > 0)
            {
                userRoleList = userRoleList.Where(x => x.Permissionid == 2).ToList();
                if (userRoleList.Count > 0)
                {
                    var AccessDetail = userRoleList.FirstOrDefault(x => x.AccessId == 1);
                    if (AccessDetail != null)
                    {
                        AddHasAccessPermission = 1;
                    }
                }
            }
        }


        if (userRoleList != null)
        {
            userRoleList = userRoleList.Where(x => x.UserId == user.UserId).ToList();
            if (userRoleList.Count > 0)
            {
                userRoleList = userRoleList.Where(x => x.Permissionid == 2).ToList();
                if (userRoleList.Count > 0)
                {
                    var AccessDetail = userRoleList.FirstOrDefault(x => x.AccessId == 2);
                    if (AccessDetail != null)
                    {
                        DeleteHasAccessPermission = 2;
                    }
                }
            }
        }


        if (userRoleList != null)
        {
            userRoleList = userRoleList.Where(x => x.UserId == user.UserId).ToList();
            if (userRoleList.Count > 0)
            {
                userRoleList = userRoleList.Where(x => x.Permissionid == 2).ToList();
                if (userRoleList.Count > 0)
                {
                    var AccessDetail = userRoleList.FirstOrDefault(x => x.AccessId == 3);
                    if (AccessDetail != null)
                    {
                        EditHasAccessPermission = 3;
                    }
                }
            }
        }


        if (userRoleList != null)
        {
            userRoleList = userRoleList.Where(x => x.UserId == user.UserId).ToList();
            if (userRoleList.Count > 0)
            {
                userRoleList = userRoleList.Where(x => x.Permissionid == 2).ToList();
                if (userRoleList.Count > 0)
                {
                    var AccessDetail = userRoleList.FirstOrDefault(x => x.AccessId == 4);
                    if (AccessDetail != null)
                    {
                        ViewHasAccessPermission = 4;
                    }
                }
            }
        }
    }
}

<style>
	.deletebtn {
		width: auto;
		padding: 10px 18px;
		background-color: #bf0d0d;
		border-radius: 1px;
	}

	.editbtn {
		width: auto;
		padding: 10px 18px;
		background-color: #008CBA;
		border-radius: 1px;
	}

	.addbtn {
		width: auto;
		padding: 10px 18px;
		background-color: #4CAF50;
		border-radius: 1px;
	}



	.btn {
		color : #000000;
	}
</style>

<head>
    <link href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.min.css" rel="stylesheet" />
</head>

<h2></h2>
@if (AddHasAccessPermission == 1)
{
	
    <span class="float-end"> <a asp-action="CreateSubCategory" asp-controller="SubCategory" class="btn addbtn" style="float:right;">New SubCategory</a></span>
}
<br />
<br />
@using (Html.BeginForm("SubIndex", "SubCategory", FormMethod.Get))
{

    <div>
        <p>@ViewBag.Error</p>
    </div>



    @if (Model != null && Model.Count() > 0)
    {
        <table id="parentdiv" class="table" style="width:100%">
            <thead>
                <tr>
                    <td>
                        <b> @Html.DisplayNameFor(model => model.CategoryName)</b>
                    </td>
                    <td>
                        <b>@Html.DisplayNameFor(model => model.SubCategoryName)</b>
                    </td>
                    <td>
                        @if (EditHasAccessPermission == 3 || DeleteHasAccessPermission == 2)
                        {
                            <b> @Html.DisplayName("Action")</b>
                        }
                    </td>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.CategoryName)
                        </td>
                        <td>
                           @Html.DisplayFor(modelItem => item.SubCategoryName)
                        </td>
                        <td>
                             @if (EditHasAccessPermission == 3)
                        {
                            @Html.ActionLink("Edit", "UpdateSubCategory", new { id = item.SubCategoryId }, htmlAttributes: new { @class = "btn editbtn" })
                        }


                        @if (DeleteHasAccessPermission == 2)
                        {
                            @Html.ActionLink("Delete", "DeleteSubCategory", new { id = item.SubCategoryId}, new { @class = "btn deletebtn" , @OnClick = "return confirm('Are you sure delete this SubCategory? All Connected SubCategory Remove!!');" })
                        }
                        </td>
                    </tr>
                }
            </tbody>

        </table>


    }
    else
    {
        <h3 class="alert-warning"> No Data Found...</h3>
    }

}


@section Scripts {

<script type="text/javascript">

     $(document).ready(function(){
     
        $('#parentdiv').DataTable({
            pagingType: 'full_numbers',
        });
    });
</script>
}

